"use strict";(self.webpackChunkradicle_docs=self.webpackChunkradicle_docs||[]).push([[473],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(a),h=n,m=u["".concat(p,".").concat(h)]||u[h]||c[h]||i;return a?r.createElement(m,o(o({ref:t},s),{},{components:a})):r.createElement(m,o({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4657:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const i={id:"glossary",title:"Glossary"},o=void 0,l={unversionedId:"understanding-radicle/glossary",id:"understanding-radicle/glossary",title:"Glossary",description:"clone",source:"@site/docs/understanding-radicle/glossary.md",sourceDirName:"understanding-radicle",slug:"/understanding-radicle/glossary",permalink:"/understanding-radicle/glossary",draft:!1,editUrl:"https://github.com/radicle-dev/radicle-docs/blob/master/docs/understanding-radicle/glossary.md",tags:[],version:"current",frontMatter:{id:"glossary",title:"Glossary"},sidebar:"docsSidebar",previous:{title:"Radicle versus GitHub and GitLab",permalink:"/understanding-radicle/radicle-versus-github-gitlab"},next:{title:"FAQ",permalink:"/understanding-radicle/faq"}},p={},d=[{value:"clone",id:"clone",level:2},{value:"contributor",id:"contributor",level:2},{value:"delegate",id:"delegate",level:2},{value:"display name",id:"display-name",level:2},{value:"git",id:"git",level:2},{value:"gossip",id:"gossip",level:2},{value:"identity",id:"identity",level:2},{value:"maintainer",id:"maintainer",level:2},{value:"main",id:"main",level:2},{value:"monorepo",id:"monorepo",level:2},{value:"network",id:"network",level:2},{value:"passphrase",id:"passphrase",level:2},{value:"peer",id:"peer",level:2},{value:"peer-to-peer (P2P)",id:"peer-to-peer-p2p",level:2},{value:"peer ID",id:"peer-id",level:2},{value:"personal URN",id:"personal-urn",level:2},{value:"project",id:"project",level:2},{value:"project name",id:"project-name",level:2},{value:"project URN",id:"project-urn",level:2},{value:"publish",id:"publish",level:2},{value:"Radicle network",id:"radicle-network",level:2},{value:"remote",id:"remote",level:2},{value:"seed node",id:"seed-node",level:2},{value:"user",id:"user",level:2},{value:"web app",id:"web-app",level:2}],s={toc:d};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"clone"},"clone"),(0,n.kt)("p",null,"To create a working copy of a ",(0,n.kt)("a",{parentName:"p",href:"#project"},"project")," on a user's machine. This working copy is where a person can make and\npublish changes to a project locally, then push to their ",(0,n.kt)("a",{parentName:"p",href:"#remote"},"remote"),"."),(0,n.kt)("h2",{id:"contributor"},"contributor"),(0,n.kt)("p",null,"A ",(0,n.kt)("a",{parentName:"p",href:"#peer"},"peer")," who has pushed code to a ",(0,n.kt)("a",{parentName:"p",href:"#project"},"project"),"."),(0,n.kt)("h2",{id:"delegate"},"delegate"),(0,n.kt)("p",null,"Any ",(0,n.kt)("a",{parentName:"p",href:"#peer"},"peer")," who can sign on behalf of the project, which means their state is trusted within the context of the\nproject. There can be one or more delegates of a given project."),(0,n.kt)("h2",{id:"display-name"},"display name"),(0,n.kt)("p",null,"A non-unique, human-readable name chosen by a Radicle ",(0,n.kt)("a",{parentName:"p",href:"#user"},"user")," to associate with their ",(0,n.kt)("a",{parentName:"p",href:"#peer-id"},"Peer ID"),"."),(0,n.kt)("h2",{id:"git"},"git"),(0,n.kt)("p",null,"A free and open source distributed version control system."),(0,n.kt)("h2",{id:"gossip"},"gossip"),(0,n.kt)("p",null,"A means of ",(0,n.kt)("a",{parentName:"p",href:"#peer-to-peer-p2p"},"peer-to-peer")," communication that relies on the interactions of peers to disseminate\ninformation. Participants share and spread data by keeping redundant copies of projects locally and sharing updates with\npeers. This allows data to be disseminated according to use and value: the more peers who are interested in certain data\nthe more available it is made to the network."),(0,n.kt)("h2",{id:"identity"},"identity"),(0,n.kt)("p",null,"A cryptographicaly signed (with a Ed25519 keypair) JSON document that identifies a device or a project, stored\nalongside standard Git data when hosted, cloned, and replicated."),(0,n.kt)("h2",{id:"maintainer"},"maintainer"),(0,n.kt)("p",null,"A ",(0,n.kt)("a",{parentName:"p",href:"#user"},"user")," who manages and pushes updates to the canonical view of a project. A maintainer is explicitly associated\nwith the ",(0,n.kt)("a",{parentName:"p",href:"#project"},"project")," at the time of creation or later as a ",(0,n.kt)("a",{parentName:"p",href:"#delegate"},"delegate"),", but there may be multiple\nproject maintainers, all editing their own remotes."),(0,n.kt)("h2",{id:"main"},"main"),(0,n.kt)("p",null,"How Radicle refers to the default development branch of a project."),(0,n.kt)("h2",{id:"monorepo"},"monorepo"),(0,n.kt)("p",null,"Radicle uses Git as a database, with project data, remotes, and identities stored in a single Git monorepo."),(0,n.kt)("h2",{id:"network"},"network"),(0,n.kt)("p",null,"The people who use Radicle tooling and their projects collaborate, supported by seed nodes, which provide a data\navailability layer for projects and identities."),(0,n.kt)("h2",{id:"passphrase"},"passphrase"),(0,n.kt)("p",null,"A sequence of characters used to encrypt a peer's private key (see ",(0,n.kt)("a",{parentName:"p",href:"#identity"},"identity"),") to enable access to the\nRadicle network. It's also needed to fetch and push changesets to the Radicle network."),(0,n.kt)("h2",{id:"peer"},"peer"),(0,n.kt)("p",null,"A device using ",(0,n.kt)("inlineCode",{parentName:"p"},"rad")," or another client to push/pull/sync data from the Radicle network."),(0,n.kt)("h2",{id:"peer-to-peer-p2p"},"peer-to-peer (P2P)"),(0,n.kt)("p",null,"A network where every ",(0,n.kt)("a",{parentName:"p",href:"#peer"},"peer")," can serve Radicle data to any other peer without the need for hosted (or\nself-hosted) seed nodes."),(0,n.kt)("h2",{id:"peer-id"},"peer ID"),(0,n.kt)("p",null,"One half of your Radicle ",(0,n.kt)("a",{parentName:"p",href:"#identity"},"identity"),", which identifies your device, non-unique ",(0,n.kt)("a",{parentName:"p",href:"#display-name"},"display name"),",\nand code you publish on the Radicle network. Find your peer ID with ",(0,n.kt)("inlineCode",{parentName:"p"},"rad self"),"."),(0,n.kt)("h2",{id:"personal-urn"},"personal URN"),(0,n.kt)("p",null,"The other half of your Radicle ",(0,n.kt)("a",{parentName:"p",href:"#identity"},"identity"),", which identifies you across devices. Find your personal URN with\n",(0,n.kt)("inlineCode",{parentName:"p"},"rad self"),"."),(0,n.kt)("h2",{id:"project"},"project"),(0,n.kt)("p",null,"A project consists of source code, issues, and patches. It carries a unique, shareable ",(0,n.kt)("a",{parentName:"p",href:"#project-urn"},"project URN"),". A\nproject also includes the identities of all its ",(0,n.kt)("a",{parentName:"p",href:"#delegate"},"delegates")," and contributors. All project data and metadata,\nincluding social artifacts such as comments, are stored within the project's repository on the user's machine."),(0,n.kt)("h2",{id:"project-name"},"project name"),(0,n.kt)("p",null,"A human-readable, non-unique name for a ",(0,n.kt)("a",{parentName:"p",href:"#project"},"project"),"."),(0,n.kt)("h2",{id:"project-urn"},"project URN"),(0,n.kt)("p",null,"A unique identifier for a specific project on the Radicle network, roughly akin to the way GitHub identifies projects\nwith ",(0,n.kt)("inlineCode",{parentName:"p"},"user-name/project-name"),". Required for sharing a project with collaborators and cloning. Find it by navigating to a\nRadicle project on your system and running ",(0,n.kt)("inlineCode",{parentName:"p"},"rad ."),"."),(0,n.kt)("h2",{id:"publish"},"publish"),(0,n.kt)("p",null,"To make data public to the network. Once something is published, it may be\nfetched and replicated by connected peers."),(0,n.kt)("h2",{id:"radicle-network"},"Radicle network"),(0,n.kt)("p",null,"The network of seed nodes that store project and identity data and make it available to access or view via ",(0,n.kt)("inlineCode",{parentName:"p"},"rad")," or the\nweb app."),(0,n.kt)("h2",{id:"remote"},"remote"),(0,n.kt)("p",null,"A version of your project managed by another person. To collaborate with others by viewing, approving, and merging their\npatches, you must track other remotes. View your project's current remotes with ",(0,n.kt)("inlineCode",{parentName:"p"},"rad track --remote")," and add new ones\nwith ",(0,n.kt)("inlineCode",{parentName:"p"},"rad track <REMOTE-URN>"),". For more on how remote repositories work, see the ",(0,n.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes"},"Git\ndocumentation"),"."),(0,n.kt)("h2",{id:"seed-node"},"seed node"),(0,n.kt)("p",null,"An always-on node stores Radicle project data/identities and makes them available for interactions with ",(0,n.kt)("inlineCode",{parentName:"p"},"rad")," or through\nthe ",(0,n.kt)("a",{parentName:"p",href:"#web-app"},"web app"),", acting as a data availability layer for the Radicle ",(0,n.kt)("a",{parentName:"p",href:"#network"},"network"),"."),(0,n.kt)("h2",{id:"user"},"user"),(0,n.kt)("p",null,"Any individual who has created a Radicle ",(0,n.kt)("a",{parentName:"p",href:"#identity"},"identity")," on the Radicle ",(0,n.kt)("a",{parentName:"p",href:"#network"},"network"),"."),(0,n.kt)("h2",{id:"web-app"},"web app"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://app.radicle.xyz"},"Radicle web app")," for viewing project data in a browser."))}c.isMDXComponent=!0}}]);