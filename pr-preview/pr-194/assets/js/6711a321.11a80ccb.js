"use strict";(self.webpackChunkradicle_docs=self.webpackChunkradicle_docs||[]).push([[980],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=d(n),u=i,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||r;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5440:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],s={id:"how-radicle-works",title:"How Radicle works"},l=void 0,d={unversionedId:"understanding-radicle/how-radicle-works",id:"understanding-radicle/how-radicle-works",title:"How Radicle works",description:"At its most global, Radicle is a decentralized autonomous organization (DAO) solving challenges around sovereign code",source:"@site/docs/understanding-radicle/how-radicle-works.md",sourceDirName:"understanding-radicle",slug:"/understanding-radicle/how-radicle-works",permalink:"/understanding-radicle/how-radicle-works",editUrl:"https://github.com/radicle-dev/radicle-docs/blob/master/docs/understanding-radicle/how-radicle-works.md",tags:[],version:"current",frontMatter:{id:"how-radicle-works",title:"How Radicle works"},sidebar:"docsSidebar",previous:{title:"Track, review, and merge patches",permalink:"/using-radicle/track-review-merge"},next:{title:"Troubleshooting",permalink:"/understanding-radicle/troubleshooting"}},c={},p=[{value:"Key parts of the Radicle landscape",id:"key-parts-of-the-radicle-landscape",level:2},{value:"Radicle identity",id:"radicle-identity",level:2},{value:"Why Radicle starts with identity",id:"why-radicle-starts-with-identity",level:3},{value:"Delegates",id:"delegates",level:3},{value:"Radicle network",id:"radicle-network",level:2},{value:"Seed nodes",id:"seed-nodes",level:3},{value:"Peer-to-peer protocol",id:"peer-to-peer-protocol",level:2},{value:"Radicle CLI",id:"radicle-cli",level:2},{value:"Radicle web app",id:"radicle-web-app",level:2},{value:"Radicle Drips",id:"radicle-drips",level:2}],h={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"At its most global, Radicle is a decentralized autonomous organization (DAO) solving challenges around sovereign code\ninfrastructure and incentives for open-source work."),(0,r.kt)("p",null,"If you're curious about that global vision, we recommend reading ",(0,r.kt)("a",{parentName:"p",href:"https://radicle.mirror.xyz/Qz4Rr0R54KLPurqqswsQ2tfRtBs9MOYpw3dlY9VjyQ8"},(0,r.kt)("em",{parentName:"a"},"Towards decentralized code\ncollaboration"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://radicle.mirror.xyz/CgcHpSXUlPvwMVaUVVaJ7r8bIJI2BOKOytaI9-nO9oY"},(0,r.kt)("em",{parentName:"a"},"Introducing\nRAD")),", which details the governance token used\nby the DAO."),(0,r.kt)("p",null,"However, for the sake of this document, we'll focus on the user-facing parts of this ecosystem ","\u2014"," what you can\ninteract with, as a user, to securely collaborate on software over a peer-to-peer network built on Git."),(0,r.kt)("h2",{id:"key-parts-of-the-radicle-landscape"},"Key parts of the Radicle landscape"),(0,r.kt)("p",null,"There are a few important open-source protocols, concepts, projects, and assets that integrate to make ",(0,r.kt)("a",{parentName:"p",href:"https://radicle.mirror.xyz/Qz4Rr0R54KLPurqqswsQ2tfRtBs9MOYpw3dlY9VjyQ8"},"Radicle's\nvision")," for decentralized code collaboration\npossible."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#radicle-identity"},(0,r.kt)("strong",{parentName:"a"},"Identity")),": A cryptographically-signed JSON document that identifies a device or a\nproject, and which is stored alongside standard Git data when hosted, cloned, and replicated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#radicle-network"},(0,r.kt)("strong",{parentName:"a"},"Network")),": The people who use Radicle tooling and the projects they collaborate on,\nwhich is supported by seed nodes, which provide a data availability layer through a monorepo of projects and\nidentities."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#peer-to-peer-protocol"},(0,r.kt)("strong",{parentName:"a"},"Peer-to-peer protocol")),": The fully peer-to-peer protocol for disseminating Git\nrepositories via gossip-based replication, enabling the hosting and sharing of projects without knowing where it\u2019s\nphysically stored within the Radicle network."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Command-line tooling"),": "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web app"),": "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Drips"),": ")),(0,r.kt)("h2",{id:"radicle-identity"},"Radicle identity"),(0,r.kt)("p",null,"Everything Radicle is trying to build around decentralized code collaboration starts with the concept of identity. In\nRadicle, an identity is a ",(0,r.kt)("em",{parentName:"p"},"portable")," JSON document that defines a user or a project on the Radicle network."),(0,r.kt)("p",null,"The most important part is the hashed content identifier\u2014the ",(0,r.kt)("strong",{parentName:"p"},"peer ID"),"\u2014which identifies it uniquely wherever it\u2019s\nstored or discovered on the Radicle network. Each Radicle identity also has a few required metadata fields, which\ndetermine whether it\u2019s a user or project identity:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'struct User {\n    /// A short name (nickname, handle), without any prefix such as the `@`\n    /// character\n    name: String,\n}\n\nstruct Project {\n    /// A short name\n    name: String,\n\n    /// A slightly longer description (should fit in a headline)\n    description: Option<String>,\n\n    /// The default branch. "master" is assumed for git repositories if\n    /// unspecified.\n    default_branch: Option<String>,\n}\n')),(0,r.kt)("p",null,"An identity can also be extended with additional metadata as needed by the client or interface that\u2019s interacting with\nit."),(0,r.kt)("p",null,"When you create a user identity, it\u2019s signed with an Ed25519 keypair that ensures only you can change the identity and\npush changes to the Radicle network on behalf of your peer ID."),(0,r.kt)("p",null,"When you create a project, your identity is added as a ",(0,r.kt)("strong",{parentName:"p"},"delegate"),"\u2014more on those in a moment."),(0,r.kt)("h3",{id:"why-radicle-starts-with-identity"},"Why Radicle starts with identity"),(0,r.kt)("p",null,"At their core, Git repositories are just commit histories. Eventually, these commit histories develop into complex trees\nof folders, files, and code."),(0,r.kt)("p",null,"But if you take two Git repositories at face value, there\u2019s no genuine way of comparing them. You can look at the commit\nlogs, diff individual files, but there\u2019s no way of knowing, just through the data that is stored in Git, whether project\nA and project B are meant to converge someday. There\u2019s no way of knowing whether their histories and their ",(0,r.kt)("inlineCode",{parentName:"p"},"HEAD")," should\nbe the same. There\u2019s also no way of identifying which repository is meant to be canonical."),(0,r.kt)("p",null,"All this uncertainty happens because source code is ",(0,r.kt)("em",{parentName:"p"},"portable"),"\u2014it can be cloned, edited, and hosted somewhere else\nwithout the project\u2019s maintainer knowing about it."),(0,r.kt)("p",null,"Centralized code collaboration platforms like GitHub and GitLab create also create identities for the projects they\nhost. If you create two identical repositories on these platforms, their identities are ",(0,r.kt)("inlineCode",{parentName:"p"},"github.com/bob/project")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"gitlab.com/bob/project"),". You might know they\u2019re the same, but to a someone else, there\u2019s no guarantee that the projects\nare the same despite seemingly sharing a ",(0,r.kt)("inlineCode",{parentName:"p"},"bob/project")," identity."),(0,r.kt)("p",null,"With centralized platforms, the code remains portable, but the ",(0,r.kt)("em",{parentName:"p"},"identity is non-portable"),"."),(0,r.kt)("p",null,"A portable Radicle identity solves this problem because your Radicle identity is always owned by ",(0,r.kt)("em",{parentName:"p"},"you"),". Your identity\nmight be replicated many times across the Radicle network, but because it\u2019s signed by your key, it\u2019s always yours. Your\nproject may be replicated many times across the Radicle network, but because your identity is a delegate, only you can\nmake changes to the canonical remote/branch."),(0,r.kt)("p",null,"Radicle identities are perfect for a peer-to-peer protocol because ",(0,r.kt)("em",{parentName:"p"},"the data is shipped with the source code, but not in\nthe source code"),"."),(0,r.kt)("h3",{id:"delegates"},"Delegates"),(0,r.kt)("p",null,"Aside from is portable identity, the most important part of a project is the delegates."),(0,r.kt)("p",null,"When you create a project, you add your identity as a delegate. Every time you push new changes to the project, they\u2019re\nsigned with your Radicle identity and your key."),(0,r.kt)("p",null,"When a project has multiple contributors, all of whom may be pushing code and patches to their individual remotes, the\ndelegate's remote is considered the \"canonical\" version of the project's code base."),(0,r.kt)("h2",{id:"radicle-network"},"Radicle network"),(0,r.kt)("p",null,"The Radicle network is the web of connections between users (via their identities, devices, and projects) and protocols.\nNo one owns this network, and it's all built on open-source code."),(0,r.kt)("p",null,"As we continue developing the ",(0,r.kt)("a",{parentName:"p",href:"#peer-to-peer-protocol"},"peer-to-peer protocol")," that enables decentralization via Git\ngossip and replication, all your interactions with the Radicle network happen via seed nodes."),(0,r.kt)("h3",{id:"seed-nodes"},"Seed nodes"),(0,r.kt)("p",null,"Seed nodes are the data availability layer for the Radicle network, designed to ensure that even if everyone in your\npeer-to-peer network is offline, you can always retrieve Radicle project data from a seed node. Seed nodes store your\nidentity, but not your private keys, which means they can\u2019t take actions on your behalf."),(0,r.kt)("p",null,"Seed nodes are based on fully ",(0,r.kt)("a",{parentName:"p",href:"https://app.radicle.network/alt-clients.radicle.eth/rad:git:hnrkk9c4zt9thuxhwi1ukxqcrs5tmhbtcsony/tree/a19cdcb846a8360d8f55c10aac8175368881a6ee"},"open-source\ncode"),",\nand Radicle currently maintains three seed nodes ","\u2014"," willow.radicle.garden, pine.radicle.garden, and\nmaple.radicle.garden ","\u2014"," with identical functionality."),(0,r.kt)("p",null,"Just like each person who uses Radicle, seed nodes store data in a monorepo, which organizes Radicle identities, project\nmetadata, and multiple remotes from anyone who has collaborated on a specific project. The data looks a little bit like\nthis:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"namespaces/\n  refs/\n    <project-one>/\n      refs/\n        heads/\n        remotes/\n          alice/\n          eve/\n    <project-two>/\n      refs/\n        heads/\n        remotes/\n          bob/\n          tom/\n          alice/\n          eve/\n    ...\n")),(0,r.kt)("p",null,"Seed nodes have three primary components."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"HTTP API")," (",(0,r.kt)("inlineCode",{parentName:"li"},"radicle-http-api"),"), which allows for browsing Radicle projects on the web. It\u2019s the foundation of\nthe ",(0,r.kt)("a",{parentName:"li",href:"https://app.radicle.xyz/"},"Radicle web app"),", but the API is entirely ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/radicle-dev/radicle-interface"},"open\nsource")," for anyone else to develop additional clients."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Git server")," (",(0,r.kt)("inlineCode",{parentName:"li"},"radicle-git-server"),"), which acts as a bridge between the seed node's Git server and those who use\nit, replicating Git data and Radicle identities.")),(0,r.kt)("p",null,"The Git server is the primary mode of replication at the moment, and it behaves in a push-pull fashion, just like\nrunning ",(0,r.kt)("inlineCode",{parentName:"p"},"git push")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"git pull")," to a repository you have with GitHub or any other Git provider. A lot happens behind\nthe scenes, like pushing identities, validating signatures, and replicating additional data like peers and sub-trees."),(0,r.kt)("p",null,"We could stop here, because seed nodes are already decentralized and open source. If you wanted to run a private Radicle\nnetwork, you can ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/radicle-dev/radicle-client-services"},"host your own seed node")," for true peer-to-peer\ncollaboration."),(0,r.kt)("p",null,"But, the push-pull relationship between a local machine, seed node, and collaborators means that the project\u2019s\nlocation\u2014which seed node contains the most up-to-date state\u2014is a prominent part of the user experience. You ",(0,r.kt)("em",{parentName:"p"},"have")," to\nknow and remember which seed note you\u2019re working with."),(0,r.kt)("p",null,"Radicle's peer-to-peer protocol will solve this problem."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The open-source code behind Radicle's seed nodes is maintained by the clients team at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/radicle-dev/radicle-client-services"},"radicle-client-services"),"."))),(0,r.kt)("h2",{id:"peer-to-peer-protocol"},"Peer-to-peer protocol"),(0,r.kt)("p",null,"Radicle's vision for sovereign code collaboration has always been a peer-to-peer protocol that uses gossiping and\nreplication to decentralize data stored by Git."),(0,r.kt)("p",null,"With a P2P protocol:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Peers track other peers."),(0,r.kt)("li",{parentName:"ul"},"Peers track projects they are interested in."),(0,r.kt)("li",{parentName:"ul"},"Peers gossip about projects, which means replicating updates from the peers they track and the projects they are\ninterested in.")),(0,r.kt)("p",null,"If you\u2019re looking for a project hosted on the Radicle network, you can ask the network to fetch it based only on its\nproject URN. The P2P protocol asks anyone you\u2019ve added as a peer, and if none of them have the project, they ask their\npeers, going as deep as necessary to find the project you\u2019re looking for."),(0,r.kt)("p",null,"Gossip abstracts away the need to know where the project is stored, which is how seed nodes are currently used. And\nthanks to the ",(0,r.kt)("a",{parentName:"p",href:"#radicle-identity"},"Radicle identity")," system, you don't care whether you get a project's data directly\nfrom a seed node or another Radicle user. You can always verify the integrity of the project and the identity of the\nperson who authored it, making it truly trustless."),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"Link team")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"radicle-node")," project is already underway"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Implementing a gossip protocol that is efficient enough and resilient to DoS.\n    In an untrusted, open network, it\u2019s very easy to produce misleading messages\n    about where some project may be found. We need to work on mitigating this.\n    Expiring routing table entries may be challenging, as well as knowing When\n    a project may be out of sync.\nScaling Git as a database.\n    Git is basically loose refs (files) plus packed refs (packfiles). On the one\n    side, keeping around hundreds of thousands or even millions of files is\n    inefficient and not what file-systems were designed for; and on the other\n    side, the packed ref format doesn\u2019t allow for efficient eg. O(1) lookups.\n    Since we\u2019re potentially storing thousands or more repositories in one large\n    monorepo, these numbers quickly add up. It\u2019s worth exploring whether\n    the monorepo storage itself is a good idea, or whether storage should\n    involve multiple repos.\nImplementing Git replication between nodes.\n    Doing this efficiently, and including validation of identities is tricky,\n    since we\u2019re operating on potentially the same refs. Proper locking of refs\n    needs to be implemented, and staging of updates until refs are validated.\n    We need a way of dealing with unintentional forks in commit histories.\nImplementing a simpler and more user-friendly identity system.\n    We want first class support for public keys as user identifiers, with\n    the option to support key-rotation etc.\n    We\u2019d like to have familiar workflows when editing project identity documents.\n")),(0,r.kt)("h2",{id:"radicle-cli"},"Radicle CLI"),(0,r.kt)("p",null,"TK"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The Radicle CLI is maintained by the ",(0,r.kt)("em",{parentName:"p"},"Clients team")," at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/radicle-dev/radicle-cli"},"radicle-cli"),"."))),(0,r.kt)("h2",{id:"radicle-web-app"},"Radicle web app"),(0,r.kt)("p",null,"TK"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The Radicle web app is maintained by the ",(0,r.kt)("em",{parentName:"p"},"Clients team")," at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/radicle-dev/radicle-interface"},"radicle-interface"),"."))),(0,r.kt)("h2",{id:"radicle-drips"},"Radicle Drips"),(0,r.kt)("p",null,"TK"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"TK"))))}u.isMDXComponent=!0}}]);