"use strict";(self.webpackChunkradicle_docs=self.webpackChunkradicle_docs||[]).push([[8],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7894:function(e,t,n){n.d(t,{z:function(){return s},Z:function(){return l}});var r=n(7294),o=n(9960),a="grid_iD3H",i="button_YHhe",c="cta_VXSW";function l(e){let{children:t}=e;return r.createElement("div",{className:a},t)}function s(e){let{children:t,style:n={},href:a,title:l,cta:s}=e;return r.createElement(o.Z,{to:a,className:i,style:n},l&&r.createElement("h3",null,l),t&&r.createElement("p",null,t),s&&r.createElement("p",{className:c},s," \u2192"))}},753:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=n(3117),o=(n(7294),n(3905)),a=n(7894);const i={id:"collaboration",title:"Radicle's collaboration workflow"},c=void 0,l={unversionedId:"using-radicle/collaboration",id:"using-radicle/collaboration",title:"Radicle's collaboration workflow",description:"This is a practical overview of the current collaboration workflow using Radicle-built projects. This will change as",source:"@site/docs/using-radicle/collaboration.md",sourceDirName:"using-radicle",slug:"/using-radicle/collaboration",permalink:"/using-radicle/collaboration",draft:!1,editUrl:"https://github.com/radicle-dev/radicle-docs/blob/master/docs/using-radicle/collaboration.md",tags:[],version:"current",frontMatter:{id:"collaboration",title:"Radicle's collaboration workflow"}},s={},u=[],p={toc:u};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This is a practical overview of the current collaboration workflow using Radicle-built projects. This will change as\nboth the protocols and projects change and add new functionality in the future.")),(0,o.kt)("p",null,"Maintainers (known in Radicle as ",(0,o.kt)("em",{parentName:"p"},"delegates"),") use ",(0,o.kt)("a",{parentName:"p",href:"/using-radicle/create"},"create")," a project and associate it with one\nor more seed nodes on the Radicle network. As they make changes, they ",(0,o.kt)("a",{parentName:"p",href:"/using-radicle/push"},"synchronize")," project data\nbetween their local state and a remote associated with the project on the Radicle network. This makes the project\n",(0,o.kt)("a",{parentName:"p",href:"/using-radicle/view-share"},"viewable")," on the Radicle web app."),(0,o.kt)("p",null,"Contributors ",(0,o.kt)("a",{parentName:"p",href:"/using-radicle/clone"},"clone")," the maintainer's remote and development branch (typically ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"master"),") from the Radicle network, initializing a new remote in the process. "),(0,o.kt)("p",null,"With the project data stored on their local system, they can make changes, commit them with Git, and push them to\n",(0,o.kt)("em",{parentName:"p"},"their")," remote. Remotes are Radicle's version of forks, with the contributor's now diverged from the latest commit on\nthe delegate's branch."),(0,o.kt)("p",null,"Maintainers can use the CLI to find, track, and ",(0,o.kt)("a",{parentName:"p",href:"/using-radicle/track-review-merge"},"review/merge")," collaborations to\ntheir project. Once the changes have been merged, the maintainer pushes them to their remote, thus re-establishing the most up to date state of the project."),(0,o.kt)("p",null,"Contributors can now synchronize the state of their remote with the maintainer's and begin to the code collaboration\ncycle once more."),(0,o.kt)(a.Z,{mdxType:"Grid"},(0,o.kt)(a.z,{href:"/using-radicle/issues",title:"Create or view issues",mdxType:"Button"}),(0,o.kt)(a.z,{href:"/using-radicle/track-review-merge",title:"Collaborate with patches",mdxType:"Button"})))}d.isMDXComponent=!0}}]);